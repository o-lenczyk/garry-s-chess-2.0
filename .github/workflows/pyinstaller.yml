name: pyinstaller

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pyinstaller
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Create pyinstaller package
        run: |
          pyinstaller main.py

          mv dist/main chess
          cp -r images chess/
          cp config.toml chess/
          mv chess/main chess/chess

          rm -rf build
          rm -rf dist

          mv chess chess-linux
          tar -czvf chess-linux.tar.gz chess-linux

          rm -rf build

      - name: Upload pyinstaller package
        uses: actions/upload-artifact@v2
        with:
          name: pyinstaller-package
          path: chess-linux.tar.gz

      - name: Create pyinstaller executable
        run: |
          pyinstaller main.py

          mv dist chess
          cp -r images chess/
          cp config.toml chess/
          mv chess/main chess/chess

          rm -rf build
          rm -rf dist

          mv chess chess-linux-executable
          tar -czvf chess-linux-executable.tar.gz chess-linux-executable

      - name: Upload pyinstaller executable
        uses: actions/upload-artifact@v2
        with:
          name: pyinstaller-executable
          path: chess-linux-executable.tar.gz

      - name: Get latest release version number
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: "0.0.0"
          artifacts: "*tar.gz"
          bodyFile: "release-notes/${{ steps.get_version.outputs.version }}.md"
          token: ${{ secrets.GITHUB_TOKEN }}
